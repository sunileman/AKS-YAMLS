apiVersion: v1
kind: Pod
metadata:
  name: nifi-stateless-sidecar
spec:
  # Credit to matthewpalmer for some of these artifacts
  # Create a volume called 'shared-logs' that the
  # app and sidecar share.
  volumes:
  - name: shared-logs 
    emptyDir: {}

  # In the sidecar pattern, there is a main application
  # container and a sidecar container.
  containers:

  # Main application container
  - name: app-container
    # Simple application: write the current date
    # to the log file every five seconds
    image: alpine # alpine is a simple Linux OS image
    command: ["/bin/sh"]
    args: ["-c", "while true; do date >> /var/log/app.txt; sleep 5;done"]

    # Mount the pod's shared log file into the app 
    # container. The app writes logs here.
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log

  # NiFi Stateless Sidecar container
  - name: sidecar-container
    # Simple sidecar: display log files using nginx.
    # In reality, this sidecar would be a custom image
    # that uploads logs to a third-party or storage service.
    image: apache/nifi-stateless
    resources:
      requests:
        cpu: "1"
        memory: "10Gi"
      limits:
        cpu: "1"
        memory: "10Gi"
    # Mount the pod's shared log file into the sidecar
    # container. NiFi Statless will read from this directory
    volumeMounts:
    - name: shared-logs
      mountPath: /var/log # nginx-specific mount path


    args: ["RunFromRegistry", "Continuous", "--json", "{\"registryUrl\":\"http://nifiregistry-service\",\"bucketId\":\"02a1b222-fb47-4b1b-9c6c-ce2bfd6b4c87\",\"flowId\":\"742f5926-16a1-4fc0-8574-8e012c835855\"}"]

    